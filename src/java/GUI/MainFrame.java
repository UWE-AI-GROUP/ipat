/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Algorithms.Hint;
import Src.Controller;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author kieran
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainFrame().setVisible(true);
//            }
//        });

        //Test Thrown Together To Ensure Hint Are Read Properly
//        File input = new File("C:\\Users\\kieran\\Documents\\NetBeansProjects\\ipat\\build\\web\\Client Data\\input");
//        File output = new File("C:\\Users\\kieran\\Documents\\NetBeansProjects\\ipat\\build\\web\\Client Data\\output");
//        File profile = new File("C:\\Users\\kieran\\Documents\\NetBeansProjects\\ipat\\build\\web\\data\\profiles\\");
//        File hintsXML = new File("C:\\Users\\kieran\\Documents\\NetBeansProjects\\ipat\\build\\web\\data\\hints.xml");
//
//        try {
//            Controller controller = new Controller(input, output, profile, hintsXML);
//            HashMap map = controller.loadHintsXML();
//            Set keySet = map.keySet();
//            for (Object key : keySet) {
//              String k = (String) key;
//                Hint v = (Hint) map.get(key);
//                System.out.println("key: " + k );
//                System.out.println("default value:      " + v.getDefaultValue());
//                System.out.println("display text:       " + v.getDisplaytext());
//                 System.out.println("Display type:       " + v.getDisplaytype());
//                  System.out.println("Effect:       " + v.getEffect());
//                   System.out.println("Range Max:       " + v.getRangeMax());
//                    System.out.println("Range Min:       " + v.getRangeMin());
//                ArrayList kernelsAffected = v.getKernelsAffected();
//                for (Object kernelsAffected1 : kernelsAffected) {
//                    System.out.println("kernelsAffected:        " + kernelsAffected1);
//                }
//                ArrayList kernelVariablesAffected = v.getKernelVariablesAffected();
//                for (Object kernelVariablesAffected1 : kernelVariablesAffected) {
//                    System.out.println("kernelVariablesAffected:     " + kernelVariablesAffected1);
//                }
//                ArrayList profileVariablesAffected = v.getProfileVariablesAffected();
//                for (Object profileVariablesAffected1 : profileVariablesAffected) {
//                    System.out.println("profileVariablesAffected:       " + profileVariablesAffected1);
//                }
//                System.out.println("===========================");
//            }
//        } catch (IOException ex) {
//            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
     
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
